<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
 
<!--  
	sql语句的xml文档:
		该xml文件与Note相关
	2016-05-08 09:45:53
-->

<mapper namespace="org.tarena.note.dao.NoteDao">

	<!-- MyBatis动态sql-->
	<!-- 动态查询 -->
	<select id="findNotes" parameterType="org.tarena.note.entity.NoteParams"
		resultType="org.tarena.note.entity.Note">
		
		select * from cn_note
		<where>
			<if test="title != null">
				cn_note_title like #{title}
			</if>
			<if test="status != null">
				and cn_note_status_id = #{status}
			</if>
		</where>
		
	</select>
	
	
	<!-- 动态更新，如果参数属性不为null就更新db -->
	<update id="updateNotes" parameterType="org.tarena.note.entity.Note">
		update cn_note
		<set>
			<if test="cn_notebook_id != null">
				cn_notebook_id = #{cn_notebook_id},
			</if>
			<if test="cn_user_id != null">
				cn_user_id = #{cn_user_id},
			</if>
			<if test="cn_note_status_id != null">
				cn_note_status_id = #{cn_note_status_id},
			</if>
			<if test="cn_note_type_id != null">
				cn_note_type_id = #{cn_note_type_id},
			</if>
			<if test="cn_note_title != null">
				cn_note_title = #{cn_note_title},
			</if>
			<if test="cn_note_body != null">
				cn_note_body = #{cn_note_body},
			</if>
			<if test="cn_note_create_time != null">
				cn_note_create_time = #{cn_note_create_time},
			</if>
			<if test="cn_note_last_modify_time != null">
				cn_note_last_modify_time = #{cn_note_last_modify_time}
			</if>
		</set>
		    
		where cn_note_id = #{cn_note_id}
	</update>
	

	<!-- 
		批量删除:
			array表示循环的是数组；list表示List集合
	-->
	<delete id="deleteNotes">
		delete from cn_note
		where cn_note_id in
		<foreach collection="array" item="id" 
			separator="," open="(" close=")">
			#{id}
		</foreach>
	</delete>
	
	
	<!-- 
		MyBatis对象关联映射：
				将note和notebook表查询记录映射成Note对象及其子属性book
	-->
	<select id="find1" resultMap="noteMap1">
		select * from cn_note note
		join cn_notebook book
		on(note.cn_notebook_id=book.cn_notebook_id)
	</select>
	
	<resultMap id="noteMap1" type="org.tarena.note.entity.Note">
		<id property="cn_note_id" column="cn_note_id"/>
		<result property="cn_notebook_id" column="cn_notebook_id"/>
		<result property="cn_note_title" column="cn_note_title"/>
		<result property="cn_note_create_time" column="cn_note_create_time"/>
		<!-- Note的其他属性省略 -->
		<!-- 关联属性book的装载 -->
		<association property="book" javaType="org.tarena.note.entity.NoteBook">
			<id property="cn_notebook_id" column="cn_notebook_id"/>
			<result property="cn_notebook_name" column="cn_notebook_name"/>
			<result property="cn_notebook_createtime" column="cn_notebook_createtime"/>
			<!-- NoteBook其他属性省略 -->
		</association>
		
	</resultMap>
	
	
	
	
	<select id="find2" resultMap="noteMap2">
		select * from cn_note
	</select>
	
	<resultMap id="noteMap2" type="org.tarena.note.entity.Note" >
		<association property="book" 
			javaType="org.tarena.note.entity.NoteBook" 
			select="loadBook" column="cn_notebook_id">  <!-- column:值为关联字段 -->
		</association>
	</resultMap>
	
	<select id="loadBook" parameterType="string"
			resultType="org.tarena.note.entity.NoteBook">
		select * from cn_notebook
		where cn_notebook_id=#{bookId}
	</select>
	

	
	<!-- 根据bookId查询所有笔记 -->
	<select id="findByBookId"  parameterType="string" 
				resultType="org.tarena.note.entity.Note">
		<!-- 只需要查出笔记的id和标题即可，以减少数据库压力 -->
		select cn_note_id, cn_note_title 
		from cn_note
		<!-- 根据笔记本id(cn_notebook_id)和笔记状态 查询笔记 -->
		where cn_notebook_id = #{bookId} 
			and cn_note_status_id = "1"
		order by cn_note_create_time desc
	</select>
	
	
	<!-- 添加笔记 -->
	<insert id="save" parameterType="org.tarena.note.entity.Note">
		insert into cn_note
		(cn_note_id, cn_notebook_id, cn_user_id, cn_note_status_id, 
		cn_note_type_id, cn_note_title, cn_note_body, 
		cn_note_create_time, cn_note_last_modify_time)
		values(#{cn_note_id}, #{cn_notebook_id}, #{cn_user_id}, 
			#{cn_note_status_id}, #{cn_note_type_id}, #{cn_note_title}, 
			#{cn_note_body}, #{cn_note_create_time}, #{cn_note_last_modify_time})
	</insert>
	
	
	<!-- 根据笔记id查询信息 -->
	<select id="findById" parameterType="string"
			resultType="org.tarena.note.entity.Note">
		select * from cn_note
		where cn_note_id=#{id}
	</select>
	
	
	
	<!-- 更新笔记内容 -->
<!--  	
	<update id="update" parameterType="org.tarena.note.entity.Note">
		update cn_note
		set cn_note_title = #{cn_note_title},
			cn_note_body = #{cn_note_body},
			cn_note_last_modify_time = #{cn_note_last_modify_time}
		where cn_note_id = #{cn_note_id}
	</update>
	
	
	
	根据笔记id更新status状态值
	<update id="updateStatus" parameterType="org.tarena.note.entity.Note">
		update cn_note
		set cn_note_status_id = #{cn_note_status_id}
		where cn_note_id = #{cn_note_id}
	</update>
-->	
	
	<!-- 统计笔记本中有没有笔记 -->
	<select id="countByBookId" parameterType="string"
			resultType="int">
		select count(*) from cn_note
		where cn_notebook_id=#{bookId}
	</select>
	
	
</mapper>