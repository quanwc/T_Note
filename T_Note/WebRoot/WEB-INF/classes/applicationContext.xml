<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	
	
	<!-- 定义连接池对象: 方式1
	<bean id="dbcp" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/cloud_note?useUnicode=true&amp;characterEncoding=utf8"/>
		  	///: 默认就是localhost，端口为3306 
			cloud_note： 是我们要使用的库
			useUnicode=true&characterEncoding=utf8作用：避免查询，添加等中文乱码：设置utf8
				
		<property name="username" value="root"/>
		<property name="password" value=""/>
	</bean>
	-->
	
	
	<!-- 加载mysql.properties文件 -->
	<util:properties id="mysql" location="classpath:mysql.properties"/>
	
	<!-- 定义连接池对象：方式2 -->
	<bean id="dbcp" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="#{mysql.driverName}"/>
		<property name="url" value="#{mysql.url}"/>
		<property name="username" value="#{mysql.user}"/>
		<property name="password" value="#{mysql.password}"/>
	</bean>
	
	
	
	<!-- 配置session工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据库连接信息 -->
		<property name="dataSource" ref="dbcp"/>
		
		<!-- SQL定义的XML -->
		<property name="mapperLocations" 
		value="classpath:org/tarena/note/sqlXML/*.xml"/>
	</bean>


	<!-- 
		配置MapperScannerConfigurer：
		用Dao接口生成实现类对象： 
	-->
	<bean id="mapperScannerConfigurer"  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		
		<!-- 自动扫描dao包下面的接口，并且实例化这些接口 -->
		<property name="basePackage" value="org.tarena.note.dao"/>
		
		<!-- 可以自动注入SqlSessionFactory -->
	</bean>
	
	
	
	
	<!-- 开启组件扫描，扫描Controller，Service层组建 -->
	<context:component-scan base-package="org.tarena.note"/>
	
	
	<!-- 
		SpringMVC注解配置:
			dispatcherservlet -》 spring配置文件 -》 找到对应的Controller	
			通过该配置，可以使用@RequestMapping等注解，可以通过spring配置文件找到Controller
	 -->
	<mvc:annotation-driven />
	
	
	<!-- 事务管理 -->
	<bean id="tx" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dbcp"></property>
	</bean>
	
	<!-- 开启事务注解@Transactional -->
	<tx:annotation-driven proxy-target-class="true"
	
		transaction-manager="tx" />
	
	
	<!-- 
		开启AOP注解配置：
		强制采用CGLIB生成动态代理类(继承方式)
	-->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
		
</beans>





